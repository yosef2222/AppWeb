class DigitRecognizer {
    constructor() {
      // инициализация весов нейросети
      this.weights = [
        // веса для цифры 0
        [1, 1, 1, 1, 1,
         1, 0, 0, 0, 1,
         1, 0, 0, 0, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1],
        // веса для цифры 1
        [0, 0, 1, 0, 0,
         0, 1, 1, 0, 0,
         1, 0, 1, 0, 0,
         0, 0, 1, 0, 0,
         0, 0, 1, 0, 0],
        // веса для цифры 2
        [1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         1, 1, 1, 1, 1,
         1, 0, 0, 0, 0,
         1, 1, 1, 1, 1],
        // веса для цифры 3
        [1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         1, 1, 1, 1, 1],
        // веса для цифры 4
        [1, 0, 0, 0, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         0, 0, 0, 0, 1],
        // веса для цифры 5
        [1, 1, 1, 1, 1,
         1, 0, 0, 0, 0,
         1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         1, 1, 1, 1, 1],
        // веса для цифры 6
        [1, 1, 1, 1, 1,
         1, 0, 0, 0, 0,
         1, 1, 1, 1, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1],
        // веса для цифры 7
        [1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         0, 0, 0, 0, 1,
         0, 0, 0, 0, 1,
         0, 0, 0, 0, 1],
        // веса для цифры 8
        [1, 1, 1, 1, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1],
        // веса для цифры 9
        [1, 1, 1, 1, 1,
         1, 0, 0, 0, 1,
         1, 1, 1, 1, 1,
         0, 0, 0, 0, 1,
         1, 1, 1, 1, 1]
         ];
       }

       // метод для распознавания цифры
predict(digit) {
    // преобразуем матрицу 5x5 в одномерный массив
    const input = digit.flat();
  
    // вычисляем сумму произведений входных значений и весов для каждой цифры
    const outputs = this.weights.map((weights) => {
       /* console.log(input.reduce((sum, value, index) => {
            return sum + value * weights[index];
          }, 0));*/
      return input.reduce((sum, value, index) => {
        return sum + value * weights[index];
      }, 0);
    });
    // выбираем выходное значение, соответствующее цифре с наибольшим значением
    const maxOutputIndex = outputs.indexOf(Math.max(...outputs));
    console.log(outputs);//Общее число 1 в ведённом числе для каждого числа веса
    // возвращаем строку с распознанной цифрой
    return String(maxOutputIndex);
  }

}